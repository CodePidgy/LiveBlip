@page "/signin"
@using LiveBlip.Models
@using Microsoft.AspNetCore.Components
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Sign In</PageTitle>

<h1>Sign In</h1>

<div class="row"
	<div class="col-md-4"
		<EditForm Model="signInModel" OnValidSubmit="HandleValidSubmit" FormName="signinForm">
			<DataAnnotationsValidator />
			<ValidationSummary />
			<div class="mb-3">
				<label for="username" class="form-label">Username</label>
				<InputText id="username" class="form-control" @bind-Value="signInModel.Username" />
			</div>

			<div class="mb-3">
				<label for="password" class="form-label">Password</label>
				<InputText id="password" type="password" class="form-control" @bind-Value="signInModel.Password" />
			</div>
			<button type="submit" class="btn btn-primary">Sign In</button>
		</EditForm>
	</div>
</div>


@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">@errorMessage</div>
}

@code {
    private SignInModel signInModel = new SignInModel();
	private string errorMessage;

    private async Task HandleValidSubmit()
    {
		//Hardcoded credentials
		const string hardcodeUname = "testuser";
		const string hardcodePword = "password";

		// Simulate sign-in logic for now
        if (signInModel.Username == hardcodeUname && signInModel.Password == hardcodePword)
        {
            // Navigate to the home page or a dashboard
            Navigation.NavigateTo("/");
        }
        else
        {
            // Display an error message
            errorMessage="Invalid credentials";
        }
    }
}
