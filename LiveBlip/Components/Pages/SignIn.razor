@page "/signin"
@using LiveBlip.Models
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Sign In</PageTitle>


	<div class="login-form">
    <div class="signin-heading">
        <h1>Login</h1>
    </div>
    <EditForm Model="@signInModel" OnValidSubmit="HandleValidSubmit" FormName="signinForm">
        <DataAnnotationsValidator/>
		@if (!string.IsNullOrEmpty(errorMessage))
		{
			<div
				class="invalid-uname-pword">@errorMessage
			</div>
		}
        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Username" HelperText="Max. 8 characters"
                                    @bind-Value="signInModel.Username"
                                    For="@(() => signInModel.Username)"
									Immediate="true"/>

                        <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                    @bind-Value="signInModel.Password"
                                    For="@(() => signInModel.Password)"
									Immediate="true"
                                    InputType="InputType.Password"/>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit"
                        Variant="Variant.Filled"
                        Color="Color.Primary"
                        Class="ml-auto1">Login</MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="5">
                <MudPaper Class="pa-4 mud-height-full">
                    <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                    @if (success)
                    {
                        <MudText Color="Color.Success">Success</MudText>
                    }
                    else
                    {
                        <MudText Color="@Color.Error">
                            <ValidationSummary />
                        </MudText>
                    }
                </MudPaper>
            </MudItem>
            <MudItem xs="12">
				 <div class="row5-col1">
					<p class="account-sign">Don't have an account?</p>
				</div>
				<div class="row5-col2">
					<a href class ="register-redirect" ="/signup">Sign Up</a>
				</div>
            </MudItem>
        </MudGrid>
    </EditForm>
</div>

@code {
	[SupplyParameterFromForm]
    private SignInModel signInModel {get; set;} = new();
    private string errorMessage;
	bool success;

    private async Task HandleValidSubmit() {
		// Hardcoded credentials
		const string hardcodeUname = "testuser";
		const string hardcodePword = "password";


        // Simulate sign-in logic for now
        if (signInModel.Username == hardcodeUname && signInModel.Password == hardcodePword) {
            // Navigate to the home page or a dashboard
            Navigation.NavigateTo("/");
        } else {
            // Display an error message
            errorMessage = "Invalid username of password.";
        }
    }
}
