@page "/signin"
@using LiveBlip.Models
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components
@inject NavigationManager Navigation

<PageTitle>Sign In</PageTitle>

<h1>Login</h1>

<EditForm Model="@signInModel" OnValidSubmit="HandleValidSubmit" FormName="signinForm">
	<DataAnnotationsValidator />

	@if (!string.IsNullOrEmpty(errorMessage)) {
		<div>
			@errorMessage
		</div>
	}

	<MudGrid>
		<MudItem xs="12" sm="7">
			<MudCard>
				<MudCardContent>
					<MudTextField
						@bind-Value="signInModel.Username"
						For="@(() => signInModel.Username)"
						HelperText="Max. 8 characters"
						Immediate="true"
						Label="Username"
					/>

					<MudTextField
						@bind-Value="signInModel.Password"
						For="@(() => signInModel.Password)"
						HelperText="Choose a strong password"
						Immediate="true"
						InputType="InputType.Password"
						Label="Password"
						Class="mt-3"
					/>
				</MudCardContent>

				<MudCardActions>
					<MudButton
						ButtonType="ButtonType.Submit"
						Color="Color.Primary"
						Variant="Variant.Filled"
						Class="ml-auto1"
					>
						Login
					</MudButton>
				</MudCardActions>
			</MudCard>
		</MudItem>

		<MudItem xs="12" sm="5">
			<MudPaper Class="pa-4 mud-height-full">
				<MudText Typo="Typo.subtitle2">Validation Summary</MudText>
				@if (success) {
					<MudText Color="Color.Success">Success</MudText>
				} else {
					<MudText Color="@Color.Error">
						<ValidationSummary />
					</MudText>
				}
			</MudPaper>
		</MudItem>

		<MudItem xs="12">
			<div>
				<p>Don't have an account?</p>
			</div>
			<div>
				<a href="/signup">Sign Up</a>
			</div>
		</MudItem>
	</MudGrid>
</EditForm>

@code {
	// fields ----------------------------------------------------------------------------------- //
	[SupplyParameterFromForm]
    private SignInModel signInModel { get; set; } = new();
    private string errorMessage;
	private bool success;

	// methods ---------------------------------------------------------------------------------- //
    private async Task HandleValidSubmit() {
		// Hardcoded credentials
		const string hardcodeUname = "testuser";
		const string hardcodePword = "password";


        // Simulate sign-in logic for now
        if (signInModel.Username == hardcodeUname && signInModel.Password == hardcodePword) {
            // Navigate to the home page or a dashboard
            Navigation.NavigateTo("/");
        } else {
            // Display an error message
            errorMessage = "Invalid username of password.";
        }
    }
}
