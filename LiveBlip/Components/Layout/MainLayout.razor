@using MudBlazor.Utilities
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject Settings Settings

<MudThemingProvider @bind-IsDarkMode="Settings.DarkMode" Theme="theme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<style>
	body {
		@if (Settings.DarkMode) {
			@:background-image: url(/images/map-dark.png);
		} else {
			@:background-image: url(/images/map-light.png);
		}
	}
</style>

<MudLayout>
	<NavBar DarkModeToggleChanged="DarkModeToggleChanged" />

	<MudMainContent Class="mt-16 pa-4">
		@Body
	</MudMainContent>
</MudLayout>

@code {
	// fields ----------------------------------------------------------------------------------- //
    private MudTheme theme = new MudTheme() {
		Palette = new PaletteLight() {
			Primary = new MudColor("#f44336"),
			Secondary = new MudColor("#121212"),
			Dark = new MudColor("#fafbfb")
		},
		PaletteDark = new PaletteDark() {
			Primary = new MudColor("#f44336"),
			Secondary = new MudColor("#fafbfb"),
			Dark = new MudColor("#121212")
		}
	};

	// methods ---------------------------------------------------------------------------------- //
	protected override async Task OnAfterRenderAsync(bool firstRender) {
		// Unsure why, but despite the page being rendered, a wait is needed for the theme to be set
		await Task.Delay(1);

		SetMapTheme();
	}

	private void DarkModeToggleChanged() {
		Settings.DarkMode = !Settings.DarkMode;

		SetMapTheme();
	}

	private void SetMapTheme() {
		if (Settings.DarkMode) {
			JSRuntime.InvokeVoidAsync("SetDarkMode");
		} else {
			JSRuntime.InvokeVoidAsync("SetLightMode");
		}
	}
}
